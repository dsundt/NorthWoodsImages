name: Build and Deploy Landmark Photos

on:
  workflow_dispatch:
    inputs:
      property_name:
        description: "Property name"
        required: true
        default: "The Landmark"
      brand_name:
        description: "Brand name"
        required: true
        default: "Red Canoe Lodging"
      brand_email:
        description: "Brand email"
        required: true
        default: "info@redcanoelodging.com"
      brand_phone:
        description: "Brand phone"
        required: true
        default: "715-351-9687"
      brand_site:
        description: "Brand website"
        required: true
        default: "redcanoelodging.com"
      zip_file:
        description: "Path to ZIP archive"
        required: true
        default: "input/LandMark Photos Names.zip"
      logo_file:
        description: "Path to logo file"
        required: true
        default: "input/IMG_1496.jpeg"
      captions_csv:
        description: "Optional captions CSV"
        required: false
        default: ""
      order_file:
        description: "Optional order file"
        required: false
        default: ""
      max_web_width:
        description: "Max web width (px)"
        required: true
        default: "2560"

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: python -m pip install -r requirements.txt

      - name: Run pipeline
        run: |
          mkdir -p output
          python src/landmark_pipeline.py \
            --zip "${{ github.event.inputs.zip_file }}" \
            --logo "${{ github.event.inputs.logo_file }}" \
            --property-name "${{ github.event.inputs.property_name }}" \
            --brand-name "${{ github.event.inputs.brand_name }}" \
            --brand-email "${{ github.event.inputs.brand_email }}" \
            --brand-phone "${{ github.event.inputs.brand_phone }}" \
            --brand-site "${{ github.event.inputs.brand_site }}" \
            --outdir "output/landmark" \
            $([ -n "${{ github.event.inputs.captions_csv }}" ] && echo --captions-csv "${{ github.event.inputs.captions_csv }}") \
            $([ -n "${{ github.event.inputs.order_file }}" ] && echo --order-file "${{ github.event.inputs.order_file }}") \
            --max-web-width "${{ github.event.inputs.max_web_width }}"

      - name: Prepare site
        run: |
          mkdir -p site
          FOUND_HTML=$(ls output/landmark/*_Photo_Order_Branded.html 2>/dev/null | head -n 1 || true)
          if [ -n "$FOUND_HTML" ]; then
            cp "$FOUND_HTML" site/index.html
          else
            echo "<html><body><h2>NorthWoodsImages Output</h2><ul>" > site/index.html
            for f in output/landmark/*.html; do
              b=$(basename "$f"); cp "$f" "site/$b"
              echo "<li><a href='$b'>$b</a></li>" >> site/index.html
            done
            echo "</ul></body></html>" >> site/index.html
          fi
          mkdir -p site/assets
          if [ -d output/landmark/thumbnails ]; then
            cp -r output/landmark/thumbnails site/assets/thumbnails
          fi
          if [ -d ui ]; then
            mkdir -p site/ui
            cp -r ui/* site/ui/
          fi

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: landmark-output
          path: |
            output/landmark
            site

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
